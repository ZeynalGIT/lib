from _typeshed import Incomplete

def stft(y, *, n_fft: int = ..., hop_length: Incomplete | None = ..., win_length: Incomplete | None = ..., window: str = ..., center: bool = ..., dtype: Incomplete | None = ..., pad_mode: str = ..., out: Incomplete | None = ...): ...
def istft(stft_matrix, *, hop_length: Incomplete | None = ..., win_length: Incomplete | None = ..., n_fft: Incomplete | None = ..., window: str = ..., center: bool = ..., dtype: Incomplete | None = ..., length: Incomplete | None = ..., out: Incomplete | None = ...): ...
def reassigned_spectrogram(y, *, sr: int = ..., S: Incomplete | None = ..., n_fft: int = ..., hop_length: Incomplete | None = ..., win_length: Incomplete | None = ..., window: str = ..., center: bool = ..., reassign_frequencies: bool = ..., reassign_times: bool = ..., ref_power: float = ..., fill_nan: bool = ..., clip: bool = ..., dtype: Incomplete | None = ..., pad_mode: str = ...): ...
def magphase(D, *, power: int = ...): ...
def phase_vocoder(D, *, rate, hop_length: Incomplete | None = ..., n_fft: Incomplete | None = ...): ...
def iirt(y, *, sr: int = ..., win_length: int = ..., hop_length: Incomplete | None = ..., center: bool = ..., tuning: float = ..., pad_mode: str = ..., flayout: str = ..., res_type: str = ..., **kwargs): ...
def power_to_db(S, *, ref: float = ..., amin: float = ..., top_db: float = ...): ...
def db_to_power(S_db, *, ref: float = ...): ...
def amplitude_to_db(S, *, ref: float = ..., amin: float = ..., top_db: float = ...): ...
def db_to_amplitude(S_db, *, ref: float = ...): ...
def perceptual_weighting(S, frequencies, *, kind: str = ..., **kwargs): ...
def fmt(y, *, t_min: float = ..., n_fmt: Incomplete | None = ..., kind: str = ..., beta: float = ..., over_sample: int = ..., axis: int = ...): ...
def pcen(S, *, sr: int = ..., hop_length: int = ..., gain: float = ..., bias: int = ..., power: float = ..., time_constant: float = ..., eps: float = ..., b: Incomplete | None = ..., max_size: int = ..., ref: Incomplete | None = ..., axis: int = ..., max_axis: Incomplete | None = ..., zi: Incomplete | None = ..., return_zf: bool = ...): ...
def griffinlim(S, *, n_iter: int = ..., hop_length: Incomplete | None = ..., win_length: Incomplete | None = ..., n_fft: Incomplete | None = ..., window: str = ..., center: bool = ..., dtype: Incomplete | None = ..., length: Incomplete | None = ..., pad_mode: str = ..., momentum: float = ..., init: str = ..., random_state: Incomplete | None = ...): ...
