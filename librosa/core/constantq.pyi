from _typeshed import Incomplete

def cqt(y, *, sr: int = ..., hop_length: int = ..., fmin: Incomplete | None = ..., n_bins: int = ..., bins_per_octave: int = ..., tuning: float = ..., filter_scale: int = ..., norm: int = ..., sparsity: float = ..., window: str = ..., scale: bool = ..., pad_mode: str = ..., res_type: str = ..., dtype: Incomplete | None = ...): ...
def hybrid_cqt(y, *, sr: int = ..., hop_length: int = ..., fmin: Incomplete | None = ..., n_bins: int = ..., bins_per_octave: int = ..., tuning: float = ..., filter_scale: int = ..., norm: int = ..., sparsity: float = ..., window: str = ..., scale: bool = ..., pad_mode: str = ..., res_type: str = ..., dtype: Incomplete | None = ...): ...
def pseudo_cqt(y, *, sr: int = ..., hop_length: int = ..., fmin: Incomplete | None = ..., n_bins: int = ..., bins_per_octave: int = ..., tuning: float = ..., filter_scale: int = ..., norm: int = ..., sparsity: float = ..., window: str = ..., scale: bool = ..., pad_mode: str = ..., dtype: Incomplete | None = ...): ...
def icqt(C, *, sr: int = ..., hop_length: int = ..., fmin: Incomplete | None = ..., bins_per_octave: int = ..., tuning: float = ..., filter_scale: int = ..., norm: int = ..., sparsity: float = ..., window: str = ..., scale: bool = ..., length: Incomplete | None = ..., res_type: str = ..., dtype: Incomplete | None = ...): ...
def vqt(y, *, sr: int = ..., hop_length: int = ..., fmin: Incomplete | None = ..., n_bins: int = ..., gamma: Incomplete | None = ..., bins_per_octave: int = ..., tuning: float = ..., filter_scale: int = ..., norm: int = ..., sparsity: float = ..., window: str = ..., scale: bool = ..., pad_mode: str = ..., res_type: str = ..., dtype: Incomplete | None = ...): ...
def griffinlim_cqt(C, *, n_iter: int = ..., sr: int = ..., hop_length: int = ..., fmin: Incomplete | None = ..., bins_per_octave: int = ..., tuning: float = ..., filter_scale: int = ..., norm: int = ..., sparsity: float = ..., window: str = ..., scale: bool = ..., pad_mode: str = ..., res_type: str = ..., dtype: Incomplete | None = ..., length: Incomplete | None = ..., momentum: float = ..., init: str = ..., random_state: Incomplete | None = ...): ...
