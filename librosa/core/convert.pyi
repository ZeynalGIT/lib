from _typeshed import Incomplete

def frames_to_samples(frames, *, hop_length: int = ..., n_fft: Incomplete | None = ...): ...
def samples_to_frames(samples, *, hop_length: int = ..., n_fft: Incomplete | None = ...): ...
def frames_to_time(frames, *, sr: int = ..., hop_length: int = ..., n_fft: Incomplete | None = ...): ...
def time_to_frames(times, *, sr: int = ..., hop_length: int = ..., n_fft: Incomplete | None = ...): ...
def time_to_samples(times, *, sr: int = ...): ...
def samples_to_time(samples, *, sr: int = ...): ...
def blocks_to_frames(blocks, *, block_length): ...
def blocks_to_samples(blocks, *, block_length, hop_length): ...
def blocks_to_time(blocks, *, block_length, hop_length, sr): ...
def note_to_hz(note, **kwargs): ...
def note_to_midi(note, *, round_midi: bool = ...): ...
def midi_to_note(midi, *, octave: bool = ..., cents: bool = ..., key: str = ..., unicode: bool = ...): ...
def midi_to_hz(notes): ...
def hz_to_midi(frequencies): ...
def hz_to_note(frequencies, **kwargs): ...
def hz_to_mel(frequencies, *, htk: bool = ...): ...
def mel_to_hz(mels, *, htk: bool = ...): ...
def hz_to_octs(frequencies, *, tuning: float = ..., bins_per_octave: int = ...): ...
def octs_to_hz(octs, *, tuning: float = ..., bins_per_octave: int = ...): ...
def A4_to_tuning(A4, *, bins_per_octave: int = ...): ...
def tuning_to_A4(tuning, *, bins_per_octave: int = ...): ...
def fft_frequencies(*, sr: int = ..., n_fft: int = ...): ...
def cqt_frequencies(n_bins, *, fmin, bins_per_octave: int = ..., tuning: float = ...): ...
def mel_frequencies(n_mels: int = ..., *, fmin: float = ..., fmax: float = ..., htk: bool = ...): ...
def tempo_frequencies(n_bins, *, hop_length: int = ..., sr: int = ...): ...
def fourier_tempo_frequencies(*, sr: int = ..., win_length: int = ..., hop_length: int = ...): ...
def A_weighting(frequencies, *, min_db=...): ...
def B_weighting(frequencies, *, min_db=...): ...
def C_weighting(frequencies, *, min_db=...): ...
def D_weighting(frequencies, *, min_db=...): ...
def Z_weighting(frequencies, *, min_db: Incomplete | None = ...): ...
def frequency_weighting(frequencies, *, kind: str = ..., **kwargs): ...
def multi_frequency_weighting(frequencies, *, kinds: str = ..., **kwargs): ...
def times_like(X, *, sr: int = ..., hop_length: int = ..., n_fft: Incomplete | None = ..., axis: int = ...): ...
def samples_like(X, *, hop_length: int = ..., n_fft: Incomplete | None = ..., axis: int = ...): ...
def midi_to_svara_h(midi, *, Sa, abbr: bool = ..., octave: bool = ..., unicode: bool = ...): ...
def hz_to_svara_h(frequencies, *, Sa, abbr: bool = ..., octave: bool = ..., unicode: bool = ...): ...
def note_to_svara_h(notes, *, Sa, abbr: bool = ..., octave: bool = ..., unicode: bool = ...): ...
def midi_to_svara_c(midi, *, Sa, mela, abbr: bool = ..., octave: bool = ..., unicode: bool = ...): ...
def hz_to_svara_c(frequencies, *, Sa, mela, abbr: bool = ..., octave: bool = ..., unicode: bool = ...): ...
def note_to_svara_c(notes, *, Sa, mela, abbr: bool = ..., octave: bool = ..., unicode: bool = ...): ...
