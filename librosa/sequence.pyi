from _typeshed import Incomplete

def dtw(X: Incomplete | None = ..., Y: Incomplete | None = ..., *, C: Incomplete | None = ..., metric: str = ..., step_sizes_sigma: Incomplete | None = ..., weights_add: Incomplete | None = ..., weights_mul: Incomplete | None = ..., subseq: bool = ..., backtrack: bool = ..., global_constraints: bool = ..., band_rad: float = ..., return_steps: bool = ...): ...
def dtw_backtracking(steps, *, step_sizes_sigma: Incomplete | None = ..., subseq: bool = ..., start: Incomplete | None = ...): ...
def rqa(sim, *, gap_onset: int = ..., gap_extend: int = ..., knight_moves: bool = ..., backtrack: bool = ...): ...
def viterbi(prob, transition, *, p_init: Incomplete | None = ..., return_logp: bool = ...): ...
def viterbi_discriminative(prob, transition, *, p_state: Incomplete | None = ..., p_init: Incomplete | None = ..., return_logp: bool = ...): ...
def viterbi_binary(prob, transition, *, p_state: Incomplete | None = ..., p_init: Incomplete | None = ..., return_logp: bool = ...): ...
def transition_uniform(n_states): ...
def transition_loop(n_states, prob): ...
def transition_cycle(n_states, prob): ...
def transition_local(n_states, width, *, window: str = ..., wrap: bool = ...): ...
