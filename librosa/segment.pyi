from _typeshed import Incomplete

def cross_similarity(data, data_ref, *, k: Incomplete | None = ..., metric: str = ..., sparse: bool = ..., mode: str = ..., bandwidth: Incomplete | None = ...): ...
def recurrence_matrix(data, *, k: Incomplete | None = ..., width: int = ..., metric: str = ..., sym: bool = ..., sparse: bool = ..., mode: str = ..., bandwidth: Incomplete | None = ..., self: bool = ..., axis: int = ...): ...
def recurrence_to_lag(rec, *, pad: bool = ..., axis: int = ...): ...
def lag_to_recurrence(lag, *, axis: int = ...): ...
def timelag_filter(function, pad: bool = ..., index: int = ...): ...
def subsegment(data, frames, *, n_segments: int = ..., axis: int = ...): ...
def agglomerative(data, k, *, clusterer: Incomplete | None = ..., axis: int = ...): ...
def path_enhance(R, n, *, window: str = ..., max_ratio: float = ..., min_ratio: Incomplete | None = ..., n_filters: int = ..., zero_mean: bool = ..., clip: bool = ..., **kwargs): ...
